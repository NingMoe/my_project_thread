package mapper;

import com.hht.interceptor.Page;
import models.ProEliteTestRecord;
import models.ProShopElite;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Map;

public interface ProShopEliteMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pro_shop_elite
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pro_shop_elite
     *
     * @mbg.generated
     */
    int insert(ProShopElite record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pro_shop_elite
     *
     * @mbg.generated
     */
    int insertSelective(ProShopElite record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pro_shop_elite
     *
     * @mbg.generated
     */
    ProShopElite selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pro_shop_elite
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(ProShopElite record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pro_shop_elite
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(ProShopElite record);

    int insertBatch(List<ProShopElite> list);

    int selectCountByShopId(String shopId);

    List<String> selectEmployeeIdsByShopId(String shopId);

    List<Map<String, Object>> selectShopElitePersonsByShopId(Map<String, Object> mapParams);

    void batchUpdateForTest(List<Map> list);

    List<Map<String,Object>> getShopElitePersonsByNoTest(Map<String, Object> mapParams);

    List<Map<String,Object>> getShopElitePersonsByTest(Map<String, Object> mapParams);

    List<Map<String,Object>> getShopSelfInLobbyClass(Map<String, Object> mapParams);

    List<Map<String,Object>> getShopSelfPassLobbyClass(Map<String, Object> mapParams);

    List<Map<String,Object>> getShopSelfInLaksaClass(Map<String, Object> mapParams);

    List<Map<String,Object>> getShopSelfPassLaksaClass(Map<String, Object> mapParams);

    List<Map<String,Object>> getShopSelfGraduates(Map<String, Object> mapParams);

    List<Map<String,Object>> selectByEmployeeId(Map<String, Object> mapParams);
    List<Map<String,Object>> selectByEmployeeCode(Map<String, Object> mapParams);
    List<Map<String,Object>> getAudiInfoByShopId(Map<String, Object> mapParams);

    int selectCertificatInfoByShopId(ProShopElite shopElite);

  //  int selectNotInLobbyCountByShopId(String shopId);

   // int updateStatusByEmployeeId(ProShopElite shopelite);

    int updateStatusByEmployeeCode(ProShopElite shopelite);

    ProShopElite selectShopEliteByEmployeeId(String employeeId);

    ProShopElite queryByEmployeeCode(String employeeCode);

    void batchUpdateForTestEnd(List<ProEliteTestRecord> list);

    /**
     * 大堂班获证人数
     * @param shopId
     * @return
     */
    int selectPassLobbyCount(String shopId);


    List<Map<String,Object>> queryForTest();

    void batchUpdateElite(List<ProShopElite> list);
    void batchUpdateEliteList(List<ProShopElite> list);
    int selectPassNotInLobbyCountByShopId(String shopId);

    List<Map<String, Object>> getShopEliteCountListPage(Page page);

    List<Map<String,Object>> getShopEmployeeCountByList(@Param("list") List<String> list);

    List<Map<String,Object>> selectEliteEmployeeByListPage(Page page);

   // List<Map<String,Object>> selectEliteByShopName(Map<String,Object> mapParams);

   // List<Map<String,Object>> selectEliteByShopId(Map<String,Object> mapParams);

    List<Map<String,Object>> selectManagerByShopId();


    List<Map<String, Object>>  getExamPassCountByList(List<String> shopIdList);

    List<Map<String,Object>> getExamPassEmployeeByList(List<String> shopIdList);

    List<Map<String, Object>> getTestsByShopId(Map<String, Object> mapParams);

    List<Map<String, Object>> getExamsByShopId(Map<String, Object> mapParams);

    int selectTestCountByShopId(String shopId);

    int selectExamCountByShopId(String shopId);

    void updateByBean(ProShopElite shopElite);

    /**
     * 门店金鹰数(分页)
     * @param page
     * @return
     */
    List<Map<String,Object>> getShopEliteCountByListPage(Page page);

    List<Map<String,Object>> getClassPassCountByList(Map map);
    /**
     * 查询已推荐入池的人员
     * @param list
     * @return
     */
    List<ProShopElite> getElitesByCodeList(List<String> list);


    List<Map<String,Object>> selectEliteByShopListPage(Page page);

    List<Map<String,Object>> selectEliteByShopIdListPage(Page page);

    List<Map<String,Object>> queryReportFormListPage(Page page);

}