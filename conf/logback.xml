<!-- https://www.playframework.com/documentation/latest/SettingsLogger -->
<configuration>

  <conversionRule conversionWord="coloredLevel" converterClass="play.api.libs.logback.ColoredLevel"/>

  <!-- 输出到控制台 -->
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>%coloredLevel %logger{15} - %message%n%xException{10}</pattern>
    </encoder>
  </appender>

  <!-- 输出所有访问日志文件 -->
  <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${application.home:-.}/logs/access-log.log</file>
    <encoder charset="UTF-8"></encoder>
    <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
      <fileNamePattern>${application.home:-.}/logs/access-log-%i.log</fileNamePattern>
      <minIndex>1</minIndex>
      <maxIndex>10</maxIndex>
    </rollingPolicy>
    <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
      <maxFileSize>100MB</maxFileSize>
    </triggeringPolicy>
    <encoder>
      <pattern>%date [%level] from %logger in %thread - %message%n%xException</pattern>
    </encoder>
  </appender>

  <!-- 输出普通日志文件 -->
  <appender name="NORMAL_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${application.home:-.}/logs/normal-log.log</file>
    <encoder charset="UTF-8"></encoder>
    <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
      <!-- Daily rollover with compression -->
      <fileNamePattern>${application.home:-.}/logs/normal-log-%i.log</fileNamePattern>
      <minIndex>1</minIndex>
      <maxIndex>10</maxIndex>
    </rollingPolicy>
    <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
      <maxFileSize>100MB</maxFileSize>
    </triggeringPolicy>
    <encoder>
      <pattern>%date [%level] from %logger in %thread - %message%n%xException</pattern>
    </encoder>
  </appender>

  <!-- 输出错误日志文件 -->
  <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${application.home:-.}/logs/error-log.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
      <fileNamePattern>${application.home:-.}/logs/error-log-%i.log</fileNamePattern>
      <minIndex>1</minIndex>
      <maxIndex>10</maxIndex>
    </rollingPolicy>
    <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
      <maxFileSize>100MB</maxFileSize>
    </triggeringPolicy>
    <encoder>
      <pattern>%date [%level] from %logger in %thread - %message%n%xException</pattern>
    </encoder>
  </appender>

  <!-- 输出SQL日志文件 -->
  <appender name="SQL_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${application.home:-.}/logs/sql-log.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
      <fileNamePattern>${application.home:-.}/logs/sql-log-%i.log</fileNamePattern>
      <minIndex>1</minIndex>
      <maxIndex>10</maxIndex>
    </rollingPolicy>
    <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
      <maxFileSize>100MB</maxFileSize>
    </triggeringPolicy>
    <encoder>
      <pattern>%date [%level] from %logger in %thread - %message%n%xException</pattern>
    </encoder>
  </appender>

  <!-- 添加异常信息输出指定文件 -->
  <!--(additivity="false" 默认为ture,当为ture 时，输入到指定文件后，再次输入到根节点文件)-->
  <logger name="errorLogger" level="ERROR">
    <appender-ref ref="ERROR_FILE"/>
  </logger>

  <!-- play日志 -->
  <logger name="play" level="INFO">
    <appender-ref ref="NORMAL_FILE"/>
  </logger>
  <logger name="application" level="INFO">
    <appender-ref ref="NORMAL_FILE"/>
  </logger>

  <!--添加sql输出打印日志-->
  <logger name="org.jdbcdslog.StatementLogger" level="INFO">
    <appender-ref ref="SQL_FILE"/>
  </logger>

  <!-- 根级别 -->
  <root level="WARN">
    <appender-ref ref="STDOUT"/>
    <appender-ref ref="FILE"/>
  </root>

</configuration>
