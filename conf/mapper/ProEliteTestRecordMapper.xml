<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.ProEliteTestRecordMapper">
  <resultMap id="BaseResultMap" type="models.ProEliteTestRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="test_url" jdbcType="VARCHAR" property="testUrl" />
    <result column="test_report_url" jdbcType="VARCHAR" property="testReportUrl" />
    <result column="test_result" jdbcType="VARCHAR" property="testResult" />
    <result column="score" jdbcType="VARCHAR" property="score" />
    <result column="enable" jdbcType="CHAR" property="enable" />
    <result column="creator_id" jdbcType="CHAR" property="creatorId" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="modifier_id" jdbcType="CHAR" property="modifierId" />
    <result column="modify_time" jdbcType="BIGINT" property="modifyTime" />
    <result column="ts" jdbcType="BIGINT" property="ts" />
    <result column="dr" jdbcType="CHAR" property="dr" />
    <result column="employee_code" jdbcType="CHAR" property="employeeCode" />
    <result column="test_once_id" jdbcType="VARCHAR" property="testOnceId" />
    <result column="test_end_time" jdbcType="VARCHAR" property="testEndTime" />
    <result column="is_task" jdbcType="VARCHAR" property="isTask" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, test_url, test_report_url, test_result, score, enable, creator_id, create_time, 
    modifier_id, modify_time, ts, dr, employee_code, test_once_id,test_end_time,is_task
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from pro_elite_test_record
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from pro_elite_test_record
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="models.ProEliteTestRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into pro_elite_test_record (id, test_url, test_report_url, 
      test_result, score, enable, 
      creator_id, create_time, modifier_id, 
      modify_time, ts, dr, employee_code, 
      test_once_id, test_end_time)
    values (#{id,jdbcType=CHAR}, #{testUrl,jdbcType=VARCHAR}, #{testReportUrl,jdbcType=VARCHAR}, 
      #{testResult,jdbcType=VARCHAR}, #{score,jdbcType=VARCHAR}, #{enable,jdbcType=CHAR}, 
      #{creatorId,jdbcType=CHAR}, #{createTime,jdbcType=BIGINT}, #{modifierId,jdbcType=CHAR}, 
      #{modifyTime,jdbcType=BIGINT}, #{ts,jdbcType=BIGINT}, #{dr,jdbcType=CHAR}, #{employeeCode,jdbcType=CHAR}, 
      #{testOnceId,jdbcType=VARCHAR}, #{testEndTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="models.ProEliteTestRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into pro_elite_test_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="testUrl != null">
        test_url,
      </if>
      <if test="testReportUrl != null">
        test_report_url,
      </if>
      <if test="testResult != null">
        test_result,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="enable != null">
        enable,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifierId != null">
        modifier_id,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="ts != null">
        ts,
      </if>
      <if test="dr != null">
        dr,
      </if>
      <if test="employeeCode != null">
        employee_code,
      </if>
      <if test="testOnceId != null">
        test_once_id,
      </if>
      <if test="testEndTime != null">
        test_end_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="testUrl != null">
        #{testUrl,jdbcType=VARCHAR},
      </if>
      <if test="testReportUrl != null">
        #{testReportUrl,jdbcType=VARCHAR},
      </if>
      <if test="testResult != null">
        #{testResult,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=VARCHAR},
      </if>
      <if test="enable != null">
        #{enable,jdbcType=CHAR},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="modifierId != null">
        #{modifierId,jdbcType=CHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=BIGINT},
      </if>
      <if test="ts != null">
        #{ts,jdbcType=BIGINT},
      </if>
      <if test="dr != null">
        #{dr,jdbcType=CHAR},
      </if>
      <if test="employeeCode != null">
        #{employeeCode,jdbcType=CHAR},
      </if>
      <if test="testOnceId != null">
        #{testOnceId,jdbcType=VARCHAR},
      </if>
      <if test="testEndTime != null">
        #{testEndTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="models.ProEliteTestRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pro_elite_test_record
    <set>
      <if test="testUrl != null">
        test_url = #{testUrl,jdbcType=VARCHAR},
      </if>
      <if test="testReportUrl != null">
        test_report_url = #{testReportUrl,jdbcType=VARCHAR},
      </if>
      <if test="testResult != null">
        test_result = #{testResult,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=VARCHAR},
      </if>
      <if test="enable != null">
        enable = #{enable,jdbcType=CHAR},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="modifierId != null">
        modifier_id = #{modifierId,jdbcType=CHAR},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=BIGINT},
      </if>
      <if test="ts != null">
        ts = #{ts,jdbcType=BIGINT},
      </if>
      <if test="dr != null">
        dr = #{dr,jdbcType=CHAR},
      </if>
      <if test="employeeCode != null">
        employee_code = #{employeeCode,jdbcType=CHAR},
      </if>
      <if test="testOnceId != null">
        test_once_id = #{testOnceId,jdbcType=VARCHAR},
      </if>
      <if test="testEndTime != null">
        test_end_time = #{testEndTime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="models.ProEliteTestRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pro_elite_test_record
    set test_url = #{testUrl,jdbcType=VARCHAR},
      test_report_url = #{testReportUrl,jdbcType=VARCHAR},
      test_result = #{testResult,jdbcType=VARCHAR},
      score = #{score,jdbcType=VARCHAR},
      enable = #{enable,jdbcType=CHAR},
      creator_id = #{creatorId,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      modifier_id = #{modifierId,jdbcType=CHAR},
      modify_time = #{modifyTime,jdbcType=BIGINT},
      ts = #{ts,jdbcType=BIGINT},
      dr = #{dr,jdbcType=CHAR},
      employee_code = #{employeeCode,jdbcType=CHAR},
      test_once_id = #{testOnceId,jdbcType=VARCHAR}
      test_end_time = #{testEndTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
  <insert id="batchInsertRecord" parameterType="java.util.List">
    <![CDATA[
			insert into PRO_ELITE_TEST_RECORD
			(
              ID, TEST_URL, TEST_REPORT_URL,
              TEST_RESULT, SCORE, ENABLE,
              CREATOR_ID, CREATE_TIME, MODIFIER_ID,
              MODIFY_TIME, TS, DR, EMPLOYEE_CODE,
              TEST_ONCE_ID
			)
		]]>
    VALUES
    <foreach collection="list" item="info" separator="," index="index">
      (
      #{info.id,jdbcType=CHAR}, #{info.testUrl,jdbcType=VARCHAR}, #{info.testReportUrl,jdbcType=VARCHAR},
      #{info.testResult,jdbcType=VARCHAR}, #{info.score,jdbcType=VARCHAR}, #{info.enable,jdbcType=CHAR},
      #{info.creatorId,jdbcType=CHAR}, #{info.createTime,jdbcType=BIGINT}, #{info.modifierId,jdbcType=CHAR},
      #{info.modifyTime,jdbcType=BIGINT}, #{info.ts,jdbcType=BIGINT}, #{info.dr,jdbcType=CHAR}, #{info.employeeCode,jdbcType=CHAR},
      #{info.testOnceId,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>
  <select id="queryListByTestOnceId" parameterType="List" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from pro_elite_test_record
      where dr='N' AND TEST_ONCE_ID IN
      <foreach collection="list" item="id" separator="," open="(" close=")">
          #{id,jdbcType=CHAR}
      </foreach>
  </select>
  <update id="batchUpdateById" parameterType="List">
    <foreach collection="list" item="item" index="index" open="" close="" separator=";">
      update pro_elite_test_record
      <set>
      <if test="item.testReportUrl != null">
        test_report_url = #{item.testReportUrl,jdbcType=VARCHAR},
      </if>
      <if test="item.testResult != null">
        test_result = #{item.testResult,jdbcType=VARCHAR},
      </if>
      <if test="item.modifierId != null">
        modifier_id = #{item.modifierId,jdbcType=CHAR},
      </if>
      <if test="item.modifyTime != null">
        modify_time = #{item.modifyTime,jdbcType=BIGINT},
      </if>
      </set>
      where id = #{item.id,jdbcType=CHAR}
    </foreach>
  </update>
  <update id="batchUpdateForTestEnd" parameterType="List">
    <foreach collection="list" item="item" index="index" open="" close="" separator=";">
      update pro_elite_test_record
      <set>
        <if test="item.modifierId != null">
          modifier_id = #{item.modifierId,jdbcType=CHAR},
        </if>
        <if test="item.modifyTime != null">
          modify_time = #{item.modifyTime,jdbcType=BIGINT},
        </if>
        <if test="item.isTask != null">
          is_task = #{item.isTask,jdbcType=CHAR},
        </if>
      </set>
      where id = #{item.id,jdbcType=CHAR}
    </foreach>
  </update>
  <update id="updateByTestId" parameterType="models.ProEliteTestRecord">
    update pro_elite_test_record SET test_end_time = #{testEndTime,jdbcType=VARCHAR}
    WHERE test_once_id = #{testOnceId,jdbcType=VARCHAR}
  </update>
  <select id="getTestNotRecord" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    from pro_elite_test_record
    WHERE is_task = 'N' AND test_end_time is NOT NULL
  </select>
  <select id="getTestByEmployee" resultMap="BaseResultMap">
          SELECT
          test_url,
          test_report_url
          FROM
              pro_elite_test_record
          WHERE DR='N' AND employee_code =#{employeeCode,jdbcType=VARCHAR}
  </select>
  <select id="queryRecordByTestOnceId" parameterType="String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pro_elite_test_record
    where dr='N' AND TEST_ONCE_ID = #{testOnceId}
  </select>


  <update id="updateByEmployeeCode" parameterType="java.lang.String">
    update pro_elite_test_record
    set dr = 'Y'
    where employee_code = #{employeeCode,jdbcType=CHAR}
  </update>

  <select id="queryList" parameterType="List" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pro_elite_test_record
    where dr='N'
    AND employee_code IN
    <foreach collection="list" item="item" separator="," open="(" close=")">
      #{item.employeeCode,jdbcType=CHAR}
    </foreach>
    GROUP BY employee_code
  </select>

  <select id="queryForTestEnd" resultMap="BaseResultMap">
    SELECT * FROM pro_elite_test_record WHERE (unix_timestamp(now())*1000-3600000)>create_time
    AND dr='N' AND test_end_time IS NULL
  </select>
</mapper>