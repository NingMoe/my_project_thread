<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.ProShopEliteMapper">
    <resultMap id="BaseResultMap" type="models.ProShopElite">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="CHAR" property="id"/>
        <id column="test_record_id" jdbcType="CHAR" property="testRecordId"/>
        <result column="shop_id" jdbcType="CHAR" property="shopId"/>
        <result column="employee_code" jdbcType="VARCHAR" property="employeeCode"/>
        <result column="employee_id" jdbcType="CHAR" property="employeeId"/>
        <result column="test_id" jdbcType="CHAR" property="testId"/>
        <result column="become_time" jdbcType="BIGINT" property="becomeTime"/>
        <result column="is_test" jdbcType="CHAR" property="isTest"/>
        <result column="class_status" jdbcType="VARCHAR" property="classStatus"/>
        <result column="elite_status" jdbcType="VARCHAR" property="eliteStatus"/>
        <result column="elite_pool_referee_id" jdbcType="CHAR" property="elitePoolRefereeId"/>
        <result column="elite_pool_time" jdbcType="BIGINT" property="elitePoolTime"/>
        <result column="lobby_referee_id" jdbcType="CHAR" property="lobbyRefereeId"/>
        <result column="lobby_time" jdbcType="BIGINT" property="lobbyTime"/>
        <result column="manager_referee_id" jdbcType="CHAR" property="managerRefereeId"/>
        <result column="manager_time" jdbcType="BIGINT" property="managerTime"/>
        <result column="is_lobby" jdbcType="CHAR" property="isLobby"/>
        <result column="is_manager" jdbcType="CHAR" property="isManager"/>
        <result column="ts" jdbcType="BIGINT" property="ts"/>
        <result column="dr" jdbcType="CHAR" property="dr"/>
    </resultMap>
    <resultMap id="ForTestResult" type="Map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="test_id" jdbcType="VARCHAR" property="test_id"/>
        <result column="employee_code" jdbcType="VARCHAR" property="employeeCode"/>
        <result column="employee_name" jdbcType="CHAR" property="employeeName"/>
        <result column="test_id" jdbcType="VARCHAR" property="testId"/>
        <result column="birthday" jdbcType="DATE" property="birthday"/>
        <result column="mobile_no" jdbcType="VARCHAR" property="mobileNo"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="shop_name" jdbcType="VARCHAR" property="shopName"/>
        <result column="position_name" jdbcType="VARCHAR" property="positionName"/>
        <result column="firstTime" jdbcType="VARCHAR" property="firstTime"/>
        <result column="lastTime" jdbcType="VARCHAR" property="lastTime"/>
        <result column="culture" jdbcType="VARCHAR" property="culture"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, shop_id, employee_code, employee_id, test_id, become_time, is_test, class_status,
        elite_status,test_record_id , elite_pool_referee_id, elite_pool_time,
        lobby_referee_id, lobby_time, manager_referee_id, manager_time, ts, dr,is_lobby,is_manager
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from pro_shop_elite
        where id = #{id,jdbcType=CHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from pro_shop_elite
        where id = #{id,jdbcType=CHAR}
    </delete>
    <insert id="insert" parameterType="models.ProShopElite">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into pro_shop_elite (id, shop_id, employee_code,
        employee_id, test_id, become_time,
        is_test, class_status, elite_status,
        test_record_id,
        elite_pool_referee_id, elite_pool_time, lobby_referee_id,
        lobby_time, manager_referee_id, manager_time,is_lobby,is_manager,
        ts, dr)
        values (#{id,jdbcType=CHAR}, #{shopId,jdbcType=CHAR}, #{employeeCode,jdbcType=VARCHAR},
        #{employeeId,jdbcType=CHAR}, #{testId,jdbcType=VARCHAR}, #{becomeTime,jdbcType=BIGINT},
        #{isTest,jdbcType=CHAR}, #{classStatus,jdbcType=VARCHAR}, #{eliteStatus,jdbcType=VARCHAR},
        #{testRecordId,jdbcType=CHAR},
        #{elitePoolRefereeId,jdbcType=CHAR}, #{elitePoolTime,jdbcType=BIGINT}, #{lobbyRefereeId,jdbcType=CHAR},
        #{lobbyTime,jdbcType=BIGINT}, #{managerRefereeId,jdbcType=CHAR}, #{managerTime,jdbcType=BIGINT},
        #{ts,jdbcType=BIGINT}, #{dr,jdbcType=CHAR},#{isLobby,jdbcType=CHAR},#{isManager,jdbcType=CHAR})
    </insert>
    <insert id="insertSelective" parameterType="models.ProShopElite">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into pro_shop_elite
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="shopId != null">
                shop_id,
            </if>
            <if test="employeeCode != null">
                employee_code,
            </if>
            <if test="employeeId != null">
                employee_id,
            </if>
            <if test="testId != null">
                test_id,
            </if>
            <if test="becomeTime != null">
                become_time,
            </if>
            <if test="isTest != null">
                is_test,
            </if>
            <if test="classStatus != null">
                class_status,
            </if>
            <if test="eliteStatus != null">
                elite_status,
            </if>

            <if test="testRecordId != null">
                test_record_id,
            </if>
            <if test="elitePoolRefereeId != null">
                elite_pool_referee_id,
            </if>
            <if test="elitePoolTime != null">
                elite_pool_time,
            </if>
            <if test="lobbyRefereeId != null">
                lobby_referee_id,
            </if>
            <if test="lobbyTime != null">
                lobby_time,
            </if>
            <if test="managerRefereeId != null">
                manager_referee_id,
            </if>
            <if test="managerTime != null">
                manager_time,
            </if>
            <if test="ts != null">
                ts,
            </if>
            <if test="dr != null">
                dr,
            </if>
            <if test="isLobby != null">
                is_lobby,
            </if>
            <if test="isManager != null">
                is_manager,
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=CHAR},
            </if>
            <if test="shopId != null">
                #{shopId,jdbcType=CHAR},
            </if>
            <if test="employeeCode != null">
                #{employeeCode,jdbcType=VARCHAR},
            </if>
            <if test="employeeId != null">
                #{employeeId,jdbcType=CHAR},
            </if>
            <if test="testId != null">
                #{testId,jdbcType=VARCHAR},
            </if>
            <if test="becomeTime != null">
                #{becomeTime,jdbcType=BIGINT},
            </if>
            <if test="isTest != null">
                #{isTest,jdbcType=CHAR},
            </if>
            <if test="classStatus != null">
                #{classStatus,jdbcType=VARCHAR},
            </if>
            <if test="eliteStatus != null">
                #{eliteStatus,jdbcType=VARCHAR},
            </if>

            <if test="testRecordId != null">
                #{testRecordId,jdbcType=VARCHAR},
            </if>
            <if test="elitePoolRefereeId != null">
                #{elitePoolRefereeId,jdbcType=CHAR},
            </if>
            <if test="elitePoolTime != null">
                #{elitePoolTime,jdbcType=BIGINT},
            </if>
            <if test="lobbyRefereeId != null">
                #{lobbyRefereeId,jdbcType=CHAR},
            </if>
            <if test="lobbyTime != null">
                #{lobbyTime,jdbcType=BIGINT},
            </if>
            <if test="managerRefereeId != null">
                #{managerRefereeId,jdbcType=CHAR},
            </if>
            <if test="managerTime != null">
                #{managerTime,jdbcType=BIGINT},
            </if>
            <if test="ts != null">
                #{ts,jdbcType=BIGINT},
            </if>
            <if test="dr != null">
                #{dr,jdbcType=CHAR},
            </if>
            <if test="isLobby != null">
                #{isLobby,jdbcType=CHAR},
            </if>
            <if test="isManager != null">
                #{isManager,jdbcType=CHAR},
            </if>


        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="models.ProShopElite">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update pro_shop_elite
        <set>
            <if test="shopId != null">
                shop_id = #{shopId,jdbcType=CHAR},
            </if>
            <if test="employeeCode != null">
                employee_code = #{employeeCode,jdbcType=VARCHAR},
            </if>
            <if test="employeeId != null">
                employee_id = #{employeeId,jdbcType=CHAR},
            </if>
            <if test="testId != null">
                test_id = #{testId,jdbcType=VARCHAR},
            </if>
            <if test="becomeTime != null">
                become_time = #{becomeTime,jdbcType=BIGINT},
            </if>
            <if test="isTest != null">
                is_test = #{isTest,jdbcType=CHAR},
            </if>
            <if test="classStatus != null">
                class_status = #{classStatus,jdbcType=VARCHAR},
            </if>
            <if test="eliteStatus != null">
                elite_status = #{eliteStatus,jdbcType=VARCHAR},
            </if>

            <if test="testRecordId != null">
                test_record_id = #{testRecordId,jdbcType=VARCHAR},
            </if>
            <if test="elitePoolRefereeId != null">
                elite_pool_referee_id = #{elitePoolRefereeId,jdbcType=CHAR},
            </if>
            <if test="elitePoolTime != null">
                elite_pool_time = #{elitePoolTime,jdbcType=BIGINT},
            </if>
            <if test="lobbyRefereeId != null">
                lobby_referee_id = #{lobbyRefereeId,jdbcType=CHAR},
            </if>
            <if test="lobbyTime != null">
                lobby_time = #{lobbyTime,jdbcType=BIGINT},
            </if>
            <if test="managerRefereeId != null">
                manager_referee_id = #{managerRefereeId,jdbcType=CHAR},
            </if>
            <if test="managerTime != null">
                manager_time = #{managerTime,jdbcType=BIGINT},
            </if>
            <if test="ts != null">
                ts = #{ts,jdbcType=BIGINT},
            </if>
            <if test="dr != null">
                dr = #{dr,jdbcType=CHAR},
            </if>


            <if test="isLobby != null">
                is_lobby = #{isLobby,jdbcType=CHAR},
            </if>
            <if test="isManager != null">
                is_manager = #{isManager,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=CHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="models.ProShopElite">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update pro_shop_elite
        set shop_id = #{shopId,jdbcType=CHAR},
        employee_code = #{employeeCode,jdbcType=VARCHAR},
        employee_id = #{employeeId,jdbcType=CHAR},
        test_id = #{testId,jdbcType=VARCHAR},
        become_time = #{becomeTime,jdbcType=BIGINT},
        is_test = #{isTest,jdbcType=CHAR},
        class_status = #{classStatus,jdbcType=VARCHAR},
        elite_status = #{eliteStatus,jdbcType=VARCHAR},
        test_record_id = #{testRecordId,jdbcType=CHAR},
        elite_pool_referee_id = #{elitePoolRefereeId,jdbcType=CHAR},
        elite_pool_time = #{elitePoolTime,jdbcType=BIGINT},
        lobby_referee_id = #{lobbyRefereeId,jdbcType=CHAR},
        lobby_time = #{lobbyTime,jdbcType=BIGINT},
        manager_referee_id = #{managerRefereeId,jdbcType=CHAR},
        manager_time = #{managerTime,jdbcType=BIGINT},
        ts = #{ts,jdbcType=BIGINT},
        dr = #{dr,jdbcType=CHAR},
        is_lobby = #{isLobby,jdbcType=CHAR},
        is_manager = #{isManager,jdbcType=CHAR}
        where id = #{id,jdbcType=CHAR}
    </update>


    <select id="selectCountByShopId" parameterType="models.ProShopElite" resultType="java.lang.Integer">
    select
     COUNT(*)
    from pro_shop_elite
    where shop_id = #{shopId,jdbcType=CHAR} AND dr = "N" AND elite_status = "200"
  </select>


    <insert id="insertBatch" parameterType="java.util.List">

        insert into pro_shop_elite (id, shop_id, employee_code,
        employee_id, test_id, become_time,
        is_test, class_status, elite_status,
        test_record_id,
        elite_pool_referee_id, elite_pool_time, lobby_referee_id,
        lobby_time, manager_referee_id, manager_time,
        ts, dr, is_lobby,is_manager)
        values
        <foreach collection="list" item="item" index="index" separator=",">

            (#{item.id,jdbcType=CHAR}, #{item.shopId,jdbcType=CHAR}, #{item.employeeCode,jdbcType=VARCHAR},
            #{item.employeeId,jdbcType=CHAR}, #{item.testId,jdbcType=CHAR}, #{item.becomeTime,jdbcType=BIGINT},
            #{item.isTest,jdbcType=CHAR}, #{item.classStatus,jdbcType=VARCHAR}, #{item.eliteStatus,jdbcType=VARCHAR},
            #{item.testRecordId,jdbcType=CHAR},
            #{item.elitePoolRefereeId,jdbcType=CHAR}, #{item.elitePoolTime,jdbcType=BIGINT},
            #{item.lobbyRefereeId,jdbcType=CHAR},
            #{item.lobbyTime,jdbcType=BIGINT}, #{item.managerRefereeId,jdbcType=CHAR},
            #{item.managerTime,jdbcType=BIGINT},
            #{item.ts,jdbcType=BIGINT},
            #{item.dr,jdbcType=CHAR},#{item.isLobby,jdbcType=CHAR},#{item.isManager,jdbcType=CHAR})

        </foreach>
    </insert>


    <select id="selectEmployeeIdsByShopId" parameterType="java.lang.String" resultType="java.lang.String">
        select
            employee_id
        from pro_shop_elite

        where shop_id = #{shopId,jdbcType=CHAR} and dr ="N"
    </select>


    <select id="selectShopElitePersonsByShopId" parameterType="java.util.Map" resultType="java.util.Map">
        select
        s.id,s.employee_id employeeId,s.elite_pool_time elitePoolTime,e.employee_name employeeName,p.position_id
        positionId,s.employee_code employeeCode

        from pro_shop_elite s
        LEFT JOIN pro_employee e
        ON s.employee_id = e.id
        LEFT JOIN pro_employee_position p
        ON s.employee_id = p.employee_id
        <where>
            s.dr = 'N' AND e.dr ='N' AND p.dr = 'N'
            AND p.default_position='Y'
            <if test="shopId != null">
                AND s.shop_id = #{shopId,jdbcType=VARCHAR}
            </if>
            <if test="eliteStatus!= null">
                AND s.elite_status = #{eliteStatus,jdbcType=VARCHAR}
            </if>
        </where>
        GROUP BY employeeCode
    </select>
    <update id="batchUpdateForTest" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update pro_shop_elite
            <set>
                <if test="item.id != null">
                    test_record_id = #{item.id,jdbcType=VARCHAR},
                </if>
                <if test="item.CandidateUniqueId != null">
                    test_id = #{item.CandidateUniqueId,jdbcType=VARCHAR},
                </if>
            </set>
            where employee_code = #{item.ExternalId,jdbcType=VARCHAR} AND dr='N'
        </foreach>
    </update>
    <update id="batchUpdateForTestEnd" parameterType="List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update pro_shop_elite
            <set>
                <if test="item.id != null">
                    test_record_id = #{item.id,jdbcType=VARCHAR},
                </if>
            </set>
            where employee_code = #{item.employeeCode,jdbcType=VARCHAR} AND dr='N'
        </foreach>
    </update>

    <select id="getShopElitePersonsByNoTest" parameterType="java.util.Map" resultType="java.util.Map">
        select
         s.id,s.employee_id employeeId,s.employee_code employeeCode,
         s.elite_pool_time elitePoolTime,
         e.employee_name employeeName,e.address address,
         p.position_id  positionId

        from pro_shop_elite s
        LEFT JOIN pro_employee e
        ON s.employee_id = e.id
        LEFT JOIN pro_employee_position p
        ON s.employee_id = p.employee_id

        WHERE

        s.dr = 'N'  AND s.shop_id = #{shopId,jdbcType=VARCHAR}
        AND  p.default_position='Y'
        AND (s.test_record_id =''OR s.test_record_id IS NULL) AND p.dr='N' AND e.dr='N'
        GROUP BY employeeCode
    </select>

    <select id="getShopElitePersonsByTest" parameterType="java.util.Map" resultType="java.util.Map">
        select
        s.id,s.employee_id employeeId,s.employee_code employeeCode,s.elite_pool_time elitePoolTime,e.employee_name employeeName,p.position_id
        positionId,r.test_result testResult ,r.create_time createTime,r.test_report_url testReportUrl

        from pro_shop_elite s
        LEFT JOIN pro_elite_test_record r
        ON s.test_record_id = r.id
        LEFT JOIN pro_employee e
        ON s.employee_id = e.id
        LEFT JOIN pro_employee_position p
        ON s.employee_id = p.employee_id


        WHERE
        s.dr = "N"  AND s.shop_id = #{shopId,jdbcType=VARCHAR} AND  s.elite_status = "100"
        AND (s.test_record_id is NOT NULL OR s.test_record_id !='')
        AND p.dr='N' AND r.dr='N' AND e.dr='N' AND p.default_position='Y'
        GROUP BY employeeCode
    </select>

    <select id="getShopSelfInLobbyClass" parameterType="java.util.Map" resultType="java.util.Map">


    select
    s.employee_id employeeId,s.employee_code employeeCode,s.elite_pool_time elitePoolTime,e.employee_name employeeName,p.position_id
    positionId,n.groom_time groomTime, a.term term,a.begin_time beginTime

    from pro_shop_elite s

    LEFT JOIN pro_employee e
    ON s.employee_id = e.id
    LEFT JOIN pro_employee_position p
    ON s.employee_id = p.employee_id
    LEFT JOIN pro_elite_class_person n
    ON s.employee_id = n.employee_id
    LEFT JOIN pro_elite_class a
    ON n.class_id = a.id
    WHERE
     n.dr = 'N' AND p.dr = 'N' AND e.dr = 'N' AND a.dr = 'N' AND s.dr = 'N'
     AND n.result = '100' AND s.elite_status = '200' AND a.class_type= '100'
     AND  p.default_position='Y'
     AND s.shop_id = #{shopId,jdbcType=VARCHAR}
     GROUP BY employeeCode


    </select>

    <select id="getShopSelfPassLobbyClass" parameterType="java.util.Map" resultType="java.util.Map">
     select
    s.employee_id employeeId,s.employee_code employeeCode,s.elite_pool_time elitePoolTime,e.employee_name employeeName,p.position_id
    positionId, c.term term,c.modify_time modifyTime,c.teacher_name,c.train_end certifiedTime

    from pro_shop_elite s

    LEFT JOIN pro_employee e
    ON (s.employee_id = e.id and e.dr = 'N')
    LEFT JOIN pro_employee_position p
    ON (s.employee_id = p.employee_id and p.dr = 'N' AND p.default_position='Y')
    LEFT JOIN (
        SELECT n.employee_id,n.modify_time,n.train_end,a.teacher_name,a.term FROM pro_elite_class_person n,

    pro_elite_class a WHERE n.dr = 'N'
   and n.class_id = a.id and a.dr = 'N' AND a.class_type= '100'
        ) c ON c.employee_id=s.employee_id
        WHERE
	 is_lobby ='Y' AND (s.is_manager is NULL OR s.is_manager !='Y')
	 AND s.elite_status='300' AND class_status='100'
     AND s.shop_id = #{shopId,jdbcType=VARCHAR}
     GROUP BY employeeCode

    </select>

    <select id="getShopSelfInLaksaClass" parameterType="java.util.Map" resultType="java.util.Map">
        select
        s.employee_id employeeId,s.employee_code employeeCode,s.elite_pool_time elitePoolTime,e.employee_name employeeName,p.position_id
        positionId, a.term term,n.modify_time modifyTime,a.teacher_name,n.groom_time groomTime,a.begin_time beginTime

        from pro_shop_elite s

        LEFT JOIN pro_employee e
        ON s.employee_id = e.id
        LEFT JOIN pro_employee_position p
        ON s.employee_id = p.employee_id
        LEFT JOIN pro_elite_class_person n
        ON s.employee_id = n.employee_id
        LEFT JOIN pro_elite_class a
        ON n.class_id = a.id
        WHERE
        n.dr = 'N' AND p.dr = 'N' AND e.dr = 'N' AND a.dr = 'N' AND s.dr = 'N'
        AND n.result = '100' AND s.elite_status = '300' AND a.class_type='200'
        AND p.default_position='Y'
        AND s.shop_id = #{shopId,jdbcType=VARCHAR}
        GROUP BY employeeCode

    </select>

    <select id="getShopSelfPassLaksaClass" parameterType="java.util.Map" resultType="java.util.Map">
         select
    s.employee_id employeeId,s.employee_code employeeCode,s.elite_pool_time elitePoolTime,e.employee_name employeeName,p.position_id
    positionId, c.term term,c.modify_time modifyTime,c.teacher_name,c.train_end certifiedTime

    from pro_shop_elite s

    LEFT JOIN pro_employee e
    ON (s.employee_id = e.id and e.dr = 'N')
    LEFT JOIN pro_employee_position p
    ON (s.employee_id = p.employee_id and p.dr = 'N' AND  p.default_position='Y')
    LEFT JOIN (
        SELECT n.employee_id,n.modify_time,n.train_end,a.teacher_name,a.term FROM pro_elite_class_person n,

    pro_elite_class a WHERE n.dr = 'N'
   and n.class_id = a.id and a.dr = 'N' AND a.class_type= '200'
        )c ON c.employee_id=s.employee_id
        WHERE
	   is_manager ='Y'
	   AND s.elite_status='400' AND class_status='100'
	   AND s.shop_id = #{shopId,jdbcType=VARCHAR}
        GROUP BY employeeCode
    </select>

    <select id="getShopSelfGraduates" parameterType="java.util.Map" resultType="java.util.Map">
        select
        s.employee_id employeeId,s.employee_code employeeCode,e.employee_name employeeName,p.position_id
        positionId,c.train_end passTime,c.teacher_name teacherName,c.class_type classType

        from pro_shop_elite s

        LEFT JOIN pro_employee e
        ON s.employee_id = e.id
        LEFT JOIN pro_employee_position p
        ON s.employee_id = p.employee_id AND p.default_position='Y'
        LEFT JOIN
        (SELECT a.teacher_name,a.class_type,pecp.train_end,pecp.employee_code
        FROM pro_elite_class a, pro_elite_class_person pecp
        WHERE a.id=pecp.class_id AND pecp.result ='300' AND a.dr='N' AND pecp.dr='N'
        AND a.class_type= #{classType,jdbcType=VARCHAR}
        )c
        ON s.employee_code = c.employee_code
        WHERE
        e.dr = 'N' AND p.dr = 'N' AND s.dr = 'N' AND s.is_lobby='Y' AND p.default_position='Y'
        <if test="isManager !=null and isManager!= '' ">
            AND s.is_manager= #{isManager,jdbcType=VARCHAR}
        </if>
        AND s.shop_id = #{shopId,jdbcType=VARCHAR}
        GROUP BY employeeCode

    </select>
    <!-- 通过员工主键 查询员工培训状态-->
    <select id="selectByEmployeeId" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from pro_shop_elite
        where dr = "N" AND employee_id = #{employeeId,jdbcType=CHAR}
    </select>

    <select id="selectByEmployeeCode" parameterType="java.util.Map" resultType="java.util.Map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        SELECT
        c.class_type classType,
        c.create_time createTime,
        c.begin_time beginTime,
        pe.elite_status eliteStatus,
        pe.class_status classStatus,
        pe.employee_code employeeCode,
        c.dr dr,
        c.train_end trainEnd


        FROM
        pro_shop_elite pe
        LEFT JOIN (SELECT ps.class_type,ps.create_time,pn.dr,pn.train_end,pn.employee_code,ps.begin_time from
        pro_elite_class_person pn,pro_elite_class ps WHERE pn.class_id=ps.id
        AND pn.result !='200' AND pn.dr='N')
        c ON pe.employee_code=c.employee_code
        where pe.dr='N' AND pe.employee_code=#{employeeCode,jdbcType=VARCHAR}

    </select>


    <select id="selectCertificatInfoByShopId" parameterType="models.ProShopElite" resultType="java.lang.Integer">
        select
        COUNT(*)
        from pro_shop_elite s
        <where>
            dr = "N"
            <if test="shopId != null">
                AND shop_id = #{shopId,jdbcType=VARCHAR}
            </if>
            <if test="eliteStatus!= null">
                AND elite_status = #{eliteStatus,jdbcType=VARCHAR}
            </if>
            <if test="classStatus!= null">
                AND class_status = #{classStatus,jdbcType=VARCHAR}
            </if>
        </where>


    </select>


    <!--大堂证获得人数-->
    <select id="selectPassLobbyCount" parameterType="java.lang.String" resultType="java.lang.Integer">
        select
         count(*)
        from pro_shop_elite
        WHERE  dr = 'N' AND shop_id = #{shopId,jdbcType=VARCHAR} AND is_lobby = 'Y'
    </select>


    <select id="selectPassNotInLobbyCountByShopId" parameterType="java.lang.String" resultType="java.lang.Integer">
        select
         COUNT(DISTINCT s.employee_code)
        from pro_shop_elite s

        LEFT JOIN pro_employee_position p
        ON s.employee_id = p.employee_id

        WHERE
        s.dr = 'N' AND p.default_position='Y' AND p.dr = 'N' AND s.is_lobby = 'Y' AND  p.position_id != "BF0CBD48D8000000800000000016E001"
        AND s.shop_id = #{shopId,jdbcType=VARCHAR}

    </select>
    <!--更新门店金鹰表-->
    <update id="updateByBean" parameterType="models.ProShopElite">
        update pro_shop_elite
        <set>
            <if test="shopId != null">
                shop_id = #{shopId,jdbcType=CHAR},
            </if>
            <if test="employeeCode != null">
                employee_code = #{employeeCode,jdbcType=VARCHAR},
            </if>

            <if test="testId != null">
                test_id = #{testId,jdbcType=VARCHAR},
            </if>
            <if test="becomeTime != null">
                become_time = #{becomeTime,jdbcType=BIGINT},
            </if>
            <if test="isTest != null">
                is_test = #{isTest,jdbcType=CHAR},
            </if>
            <if test="classStatus != null">
                class_status = #{classStatus,jdbcType=VARCHAR},
            </if>
            <if test="eliteStatus != null">
                elite_status = #{eliteStatus,jdbcType=VARCHAR},
            </if>

            <if test="testRecordId != null">
                test_record_id = #{testRecordId,jdbcType=VARCHAR},
            </if>
            <if test="elitePoolRefereeId != null">
                elite_pool_referee_id = #{elitePoolRefereeId,jdbcType=CHAR},
            </if>
            <if test="elitePoolTime != null">
                elite_pool_time = #{elitePoolTime,jdbcType=BIGINT},
            </if>
            <if test="lobbyRefereeId != null">
                lobby_referee_id = #{lobbyRefereeId,jdbcType=CHAR},
            </if>
            <if test="lobbyTime != null">
                lobby_time = #{lobbyTime,jdbcType=BIGINT},
            </if>
            <if test="managerRefereeId != null">
                manager_referee_id = #{managerRefereeId,jdbcType=CHAR},
            </if>
            <if test="managerTime != null">
                manager_time = #{managerTime,jdbcType=BIGINT},
            </if>
            <if test="ts != null">
                ts = #{ts,jdbcType=BIGINT},
            </if>
            <if test="dr != null">
                dr = #{dr,jdbcType=CHAR},
            </if>
            <if test="isLobby != null">
                is_lobby = #{isLobby,jdbcType=CHAR},
            </if>
            <if test="isManager != null">
                is_manager = #{isManager,jdbcType=CHAR},
            </if>

        </set>
        where employee_id = #{employeeId,jdbcType=CHAR} AND dr='N'
    </update>
    <!--查询员工携带房源信息-->
    <select id="getAudiInfoByShopId" parameterType="java.util.Map" resultType="java.util.Map">
           SELECT
                pe.employee_code,
                pe.employee_id,
                pm.is_room,
                pm.project_name,
                pe.shop_id,
                py.employee_name
                ,pm.status,
                pm.lobby_certificate_num,
	            pm.is_conform_job,
	            pm.is_satisfy_shop_level,
	            pm.groom_time
           FROM
                 pro_shop_elite pe
                LEFT JOIN pro_elite_groom pm ON pe.employee_id = pm.employee_id
                Left join pro_employee py ON pe.employee_id=py.id
        WHERE
        pe.dr = 'N'  AND pe.elite_status = '300' AND pe.class_status='300' AND pm.status='300'
        AND pm.class_type='200' AND pm.dr='N'  AND pm.is_room='Y'
        </select>


    <select id="selectShopEliteByEmployeeId" parameterType="java.lang.String" resultMap="BaseResultMap">

        select
        <include refid="Base_Column_List"/>
        from pro_shop_elite
        where dr = 'N' AND employee_id = #{employeeId,jdbcType=CHAR}
    </select>
    <select id="queryByEmployeeCode" parameterType="String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from pro_shop_elite
        where dr = 'N' AND employee_Code = #{employeeCode,jdbcType=CHAR}
    </select>
    <update id="updateStatusByEmployeeCode" parameterType="models.ProShopElite">
        update pro_shop_elite
        <set>
            <if test="shopId != null">
                shop_id = #{shopId,jdbcType=CHAR},
            </if>
            <if test="employeeCode != null">
                employee_code = #{employeeCode,jdbcType=VARCHAR},
            </if>

            <if test="testId != null">
                test_id = #{testId,jdbcType=VARCHAR},
            </if>
            <if test="becomeTime != null">
                become_time = #{becomeTime,jdbcType=BIGINT},
            </if>
            <if test="isTest != null">
                is_test = #{isTest,jdbcType=CHAR},
            </if>
            <if test="classStatus != null">
                class_status = #{classStatus,jdbcType=VARCHAR},
            </if>
            <if test="eliteStatus != null">
                elite_status = #{eliteStatus,jdbcType=VARCHAR},
            </if>

            <if test="testRecordId != null">
                test_record_id = #{testRecordId,jdbcType=VARCHAR},
            </if>
            <if test="elitePoolRefereeId != null">
                elite_pool_referee_id = #{elitePoolRefereeId,jdbcType=CHAR},
            </if>
            <if test="elitePoolTime != null">
                elite_pool_time = #{elitePoolTime,jdbcType=BIGINT},
            </if>
            <if test="lobbyRefereeId != null">
                lobby_referee_id = #{lobbyRefereeId,jdbcType=CHAR},
            </if>
            <if test="lobbyTime != null">
                lobby_time = #{lobbyTime,jdbcType=BIGINT},
            </if>
            <if test="managerRefereeId != null">
                manager_referee_id = #{managerRefereeId,jdbcType=CHAR},
            </if>
            <if test="managerTime != null">
                manager_time = #{managerTime,jdbcType=BIGINT},
            </if>
            <if test="ts != null">
                ts = #{ts,jdbcType=BIGINT},
            </if>
            <if test="dr != null">
                dr = #{dr,jdbcType=CHAR},
            </if>
            <if test="isLobby != null">
                is_lobby = #{isLobby,jdbcType=CHAR},
            </if>
            <if test="isManager != null">
                is_manager = #{isManager,jdbcType=CHAR},
            </if>

        </set>
        where employee_code = #{employeeCode,jdbcType=CHAR}
    </update>
    <select id="queryForTest" resultMap="ForTestResult">
        SELECT
            pse.test_id,
            pe.employee_code,
            pe.employee_name,
            pe.birthday,
            pe.mobile_no,
            pe.email,
            (CASE pe.gender
             WHEN '1'
                 THEN '男'
             WHEN '0'
                 THEN '女' END) sex,
            ps.shop_name,
            pp.position_name,
            from_unixtime(pe.first_entry_time/1000,'%Y-%m-%d') firstTime,
            from_unixtime(pe.last_entry_time/1000,'%Y-%m-%d') lastTime,
            pe.culture
        FROM pro_shop_elite pse LEFT JOIN pro_employee pe
          ON pse.employee_id = pe.id
          LEFT JOIN pro_employee_shop pes
          ON pe.id=pes.employee_id
          LEFT JOIN pro_shop ps
          ON pes.shop_id = ps.id
          LEFT JOIN
            pro_employee_position pep
          ON pep.employee_id = pe.id LEFT JOIN pro_position pp
          ON pep.position_id = pp.id
        WHERE pse.dr = 'N'
              AND pe.dr = 'N' AND ps.dr = 'N' AND pes.dr = 'N'
              AND pep.dr = 'N' AND pp.dr = 'N'
              AND pep.default_position='Y'
              AND pse.test_record_id IS NULL
              AND pse.class_status = '100' AND pse.elite_status = '100'
          GROUP BY pse.employee_code
    </select>

    <update id="batchUpdateElite" parameterType="List">
        <foreach collection="list" separator=";" item="item">
            UPDATE pro_shop_elite
            <set>
                <if test="item.classStatus != null">
                    class_status = #{item.classStatus},
                </if>
                <if test="item.eliteStatus != null">
                    elite_status = #{item.eliteStatus},
                </if>
                <if test="item.isLobby != null">
                    is_lobby = #{item.isLobby,jdbcType=CHAR},
                </if>
                <if test="item.isManager != null">
                    is_manager = #{item.isManager,jdbcType=CHAR}
                </if>
            </set>
            WHERE employee_id = #{item.employeeId}
        </foreach>
    </update>

    <update id="batchUpdateEliteList" parameterType="List">
        <foreach collection="list" separator=";" item="item">
            UPDATE pro_shop_elite
            <set>
                <if test="item.employeeCode != null">
                    employee_code = #{item.employeeCode,jdbcType=VARCHAR},
                </if>

                <if test="item.testId != null">
                    test_id = #{item.testId,jdbcType=VARCHAR},
                </if>
                <if test="item.becomeTime != null">
                    become_time = #{item.becomeTime,jdbcType=BIGINT},
                </if>
                <if test="item.isTest != null">
                    is_test = #{item.isTest,jdbcType=CHAR},
                </if>
                <if test="item.classStatus != null">
                    class_status = #{item.classStatus,jdbcType=VARCHAR},
                </if>
                <if test="item.eliteStatus != null">
                    elite_status = #{item.eliteStatus,jdbcType=VARCHAR},
                </if>

                <if test="item.testRecordId != null">
                    test_record_id = #{item.testRecordId,jdbcType=VARCHAR},
                </if>
                <if test="item.elitePoolRefereeId != null">
                    elite_pool_referee_id = #{item.elitePoolRefereeId,jdbcType=CHAR},
                </if>
                <if test="item.elitePoolTime != null">
                    elite_pool_time = #{item.elitePoolTime,jdbcType=BIGINT},
                </if>
                <if test="item.lobbyRefereeId != null">
                    lobby_referee_id = #{item.lobbyRefereeId,jdbcType=CHAR},
                </if>
                <if test="item.lobbyTime != null">
                    lobby_time = #{item.lobbyTime,jdbcType=BIGINT},
                </if>
                <if test="item.managerRefereeId != null">
                    manager_referee_id = #{item.managerRefereeId,jdbcType=CHAR},
                </if>
                <if test="item.managerTime != null">
                    manager_time = #{item.managerTime,jdbcType=BIGINT},
                </if>
                <if test="item.ts != null">
                    ts = #{item.ts,jdbcType=BIGINT},
                </if>
                <if test="item.dr != null">
                    dr = #{item.dr,jdbcType=CHAR},
                </if>
                <if test="item.isLobby != null">
                    is_lobby = #{item.isLobby,jdbcType=CHAR},
                </if>
                <if test="item.isManager != null">
                    is_manager = #{item.isManager,jdbcType=CHAR},
                </if>
            </set>
            WHERE employee_code = #{item.employeeCode,jdbcType=CHAR}
        </foreach>
    </update>
    <!--所有店的金鹰人数-->
    <select id="getShopEliteCountListPage" resultType="java.util.Map" parameterType="com.hht.interceptor.Page">

        SELECT
        proe.shop_id shopId, psh.shop_name shopName, count(*) eliteCount
        FROM pro_shop_elite proe,pro_shop psh
        WHERE proe.dr='N' AND psh.dr ='N' AND elite_status = '200'AND proe.shop_id = psh.id
        <if test="params.shopName != null">
            AND psh.shop_name like '%${params.shopName}%'
        </if>
        GROUP BY shopId
    </select>

    <!--所有店的员工人数-->
    <select id="getShopEmployeeCountByList" resultType="java.util.Map" parameterType="java.util.List">

        SELECT
        ps.id shopId,
        ps.shop_name shopName,
        count(*) employeeCount
        FROM pro_employee pe,pro_employee_shop pes,pro_shop ps
        WHERE pe.id=pes.employee_id AND ps.id = pes.shop_id
        AND pe.dr='N' AND pes.dr='N' AND ps.dr='N'
        <if test="list != null and list.size()>0">
            AND ps.id in
            <foreach collection="list" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="list == null or list.size()==0">
            AND ps.id='-1'
        </if>
        GROUP BY shopId

    </select>

    <!--根据shopId查询本店金鹰分页-->
    <select id="selectEliteEmployeeByListPage" parameterType="com.hht.interceptor.Page" resultType="java.util.Map">
        SELECT
        s.id,
        e.id employeeId,
        s.elite_pool_time elitePoolTime,
        e.employee_name employeeName,
        p.position_id positionId,
        s.employee_code employeeCode,
        e.last_entry_time enterTime,
        s.shop_id shopId
        FROM
        pro_employee e
        LEFT JOIN pro_employee_position p ON e.id = p.employee_id
        LEFT JOIN pro_shop_elite s ON s.employee_id = e.id
        <where>
            s.dr = 'N' AND e.dr ='N' AND p.default_position='Y' AND p.dr = 'N'AND s.elite_status = '200'
            <if test="params.shopId != null and params.shopId != ''">
                AND s.shop_id = #{params.shopId,jdbcType=VARCHAR}
            </if>
        </where>
    </select>


    <!--查询通过考试的人数-->
    <select id="getExamPassCountByList" parameterType="java.util.List" resultType="java.util.Map">
        SELECT
        pse.shop_id shopId,COUNT(*) passCount
        FROM pro_shop_elite pse,pro_elite_examination_online peo

        where pse.employee_code =peo.employee_code
        and peo.is_pass ='Y'and pse.elite_status = '200'
        AND pse.shop_id IN
        <foreach collection="list" item="shopId" open="(" close=")"
                 separator=",">
            #{shopId}
        </foreach>
        GROUP BY shopId

    </select>

    <!--查询通过考试的人员-->
    <select id="getExamPassEmployeeByList" parameterType="java.util.List" resultType="java.util.Map">
        SELECT
        pse.shop_id shopId,pse.employee_code employeeCode,pse.elite_pool_time elitePoolTime,peo.create_time createTime
        FROM pro_shop_elite pse,pro_elite_examination_online peo

        where pse.employee_code =peo.employee_code
        and peo.is_pass ='Y'and pse.elite_status = '200'
        AND pse.shop_id IN
        <foreach collection="list" item="shopId" open="(" close=")"
                 separator=",">
            #{shopId}
        </foreach>
        GROUP BY employeeCode

    </select>


    <!--根据门店名称查询所有门店测评结果-->
    <select id="selectEliteByShopListPage" parameterType="com.hht.interceptor.Page" resultType="java.util.Map">
        SELECT
        personcount.shop_name shopName,
        personcount.id shopId,
        personcount.percount,
        elitecount,
        ROUND(elitecount / percount * 100, 1) percenelitecount,
        testcount,
        goodcount,
        ROUND(goodcount / testcount * 100, 1) percengoodcount,
        midcount,
        ROUND(midcount / testcount * 100, 1) percenmidcount,
        ROUND(elitecount / testcount * 100, 1) auditpassrate
        FROM
        (
        SELECT
        count(*) percount,
        psp.shop_name,
        psp.id
        FROM
        pro_employee pe
        LEFT JOIN pro_employee_shop pp ON pe.id = pp.employee_id
        LEFT JOIN pro_shop psp ON pp.shop_id = psp.id
        WHERE
        pe.dr = 'N'
        AND pp.DR = 'N'
        AND psp.dr = 'N'
        GROUP BY
        psp.id
        ) personcount
        LEFT JOIN (
        SELECT
        count(*) elitecount,
        psp.shop_name
        FROM
        pro_shop_elite pe
        LEFT JOIN pro_shop psp ON pe.shop_id = psp.id
        WHERE
        pe.elite_status = '200'
        GROUP BY
        psp.id
        ) elitecount ON personcount.shop_name = elitecount.shop_name
        JOIN (
        SELECT
        count(*) testcount,
        psp.shop_name
        FROM
        pro_elite_test_record pd
        JOIN pro_shop_elite pe ON pd.employee_code = pe.employee_code
        JOIN pro_employee_shop pp ON pe.employee_id = pp.employee_id
        JOIN pro_shop psp ON pp.shop_id = psp.id
        WHERE
        pd.dr = 'N'
        AND pe.dr = 'N'
        AND pp.dr = 'N'
        AND psp.dr = 'N'
        AND pe.elite_status = '200'
        GROUP BY
        psp.id
        ) testcount ON personcount.shop_name = testcount.shop_name
        JOIN (
        SELECT
        count(*) goodcount,
        psp.shop_name
        FROM
        pro_elite_test_record pd
        JOIN pro_shop_elite pe ON pd.employee_code = pe.employee_code
        JOIN pro_employee_shop pp ON pe.employee_id = pp.employee_id
        JOIN pro_shop psp ON pp.shop_id = psp.id
        WHERE
        pd.dr = 'N'
        AND pe.dr = 'N'
        AND pp.dr = 'N'
        AND psp.dr = 'N'
        AND test_result = '合格'
        AND pe.elite_status = '200'
        GROUP BY
        psp.id
        ) goodcount ON goodcount.shop_name = personcount.shop_name
        JOIN (
        SELECT
        count(*) midcount,
        psp.shop_name
        FROM
        pro_elite_test_record pd
        JOIN pro_shop_elite pe ON pd.employee_code = pe.employee_code
        JOIN pro_employee_shop pp ON pe.employee_id = pp.employee_id
        JOIN pro_shop psp ON pp.shop_id = psp.id
        WHERE
        pd.dr = 'N'
        AND pe.dr = 'N'
        AND pp.dr = 'N'
        AND psp.dr = 'N'
        AND test_result = '不合格'
        AND pe.elite_status = '200'
        GROUP BY
        psp.id
        ) midcount ON midcount.shop_name = personcount.shop_name
        <if test="params.shopName != null">
            where personcount.shop_name like '%${params.shopName}%'
        </if>

    </select>
    <!--根据门店ID查询门店测评结果-->

    <select id="selectEliteByShopIdListPage" parameterType="com.hht.interceptor.Page" resultType="java.util.Map">
        SELECT
        ps.shop_name shopName,
        ps.id shopId,
        ps.employee_name employeeName,
        ps.position_name positionName,
        pe.employee_code employeeCode,
        petr.create_time createTime,
        petr.test_result testResult,
        petr.test_report_url testReportUrl,
        pe.elite_pool_time elitePoolTime,
        pe.elite_pool_time resultTime
        FROM
        pro_shop_elite pe
        JOIN pro_elite_test_record petr ON pe.employee_code = petr.employee_code
        JOIN (
        SELECT
        pe.employee_code,
        pe.employee_name,
        pp.position_name,
        ps.shop_name,
        ps.id
        FROM
        pro_employee pe,
        pro_employee_position pep,
        pro_position pp,
        pro_employee_shop pes,
        pro_shop ps
        WHERE
        pe.id = pep.employee_id
        AND pe.id = pes.employee_id
        AND pep.default_position='Y'
        AND pep.position_id = pp.id
        AND pes.shop_id = ps.id
        AND pe.dr = 'N'
        AND pes.DR = 'N'
        AND ps.dr = 'N'
        GROUP BY
        employee_code
        ) ps ON ps.employee_code = pe.employee_code
        WHERE
        pe.dr = 'N'
        AND petr.DR = 'N'
        <if test="params.shopId != null">
            AND ps.id = #{params.shopId,jdbcType=VARCHAR}
        </if>
    </select>

    <!--根据门店ID查询门店店经理-->
    <select id="selectManagerByShopId" resultType="java.util.Map">
        SELECT
        pep.shop_id shopId,
        pe.employee_name employeeName
        FROM
        pro_employee pe
        LEFT JOIN pro_employee_position pep ON pe.id = pep.employee_id AND pep.default_position='Y'
        LEFT JOIN pro_position pn ON pep.position_id = pn.id
        WHERE
        pn.position_name = '店经理'
    </select>

    <!--首页查询本店测评列表-->
    <select id="getTestsByShopId" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
         pre.id,pe.employee_name employeeName,
         petr.create_time testTime,
         petr.test_result testResult,
         petr.test_report_url testReportUrl
        FROM
        pro_shop_elite pre,pro_employee pe,pro_elite_test_record petr
        WHERE
        pre.dr ='N'AND pe.dr ='N'AND petr.dr ='N'
        AND pre.employee_code = pe.employee_code AND pre.employee_code = petr.employee_code
        AND pre.shop_id = #{shopId,jdbcType=VARCHAR}
    </select>

    <!--首页查询本店考试列表-->
    <select id="getExamsByShopId" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
         pre.id,pe.employee_name employeeName,
         peeo.create_time examTime,
         peeo.relult_score examScore,
         peeo.pass_score passScore,
         peeo.examination_code examinationCode,
         peeo.examination_date_time examinationDateTime
        FROM
        pro_shop_elite pre,pro_employee pe,pro_elite_examination_online peeo
        WHERE
        pre.dr ='N'AND pe.dr ='N'AND peeo.dr ='N'
        AND pre.employee_code = pe.employee_code AND pre.employee_code = peeo.employee_code
        AND pre.shop_id = #{shopId,jdbcType=VARCHAR}

    </select>


    <!--首页查询本店测评人数-->
    <select id="selectTestCountByShopId" resultType="java.lang.Integer" parameterType="java.util.Map">
        SELECT
        count(DISTINCT pre.employee_code)
        FROM
        pro_shop_elite pre,pro_elite_test_record petr
        WHERE
        pre.dr ='N'AND petr.dr ='N'
        AND pre.employee_code = petr.employee_code
        AND pre.shop_id = #{shopId,jdbcType=VARCHAR}

    </select>

    <!--首页查询本店考试人数-->
    <select id="selectExamCountByShopId" resultType="java.lang.Integer" parameterType="java.util.Map">
        SELECT
         count(DISTINCT pre.employee_code)
        FROM
        pro_shop_elite pre,pro_elite_examination_online peeo
        WHERE
        pre.dr ='N'AND peeo.dr ='N'
        AND pre.employee_code = peeo.employee_code
        AND pre.shop_id = #{shopId,jdbcType=VARCHAR}
    </select>


    <!--门店金鹰人数-->
    <select id="getShopEliteCountByListPage" resultType="java.util.Map" parameterType="com.hht.interceptor.Page">

        SELECT
        proe.shop_id shopId, psh.shop_name shopName, count(*) eliteCount
        FROM pro_shop_elite proe,pro_shop psh
        WHERE proe.dr='N' AND psh.dr ='N' AND elite_status = '200'AND proe.shop_id = psh.id
        <if test="params.shopName != null">
            AND psh.shop_name like '%${params.shopName}%'
        </if>
        <!--<if test="params.stTime != null and params.stTime !=''">-->
            <!--AND from_unixtime(m.groom_time/1000,'%Y-%m-%d')&gt;= from_unixtime(#{params.stTime}/1000,'%Y-%m-%d')-->

        <!--</if>-->
        <!--<if test="params.endTime != null and params.endTime !=''">-->
            <!--AND from_unixtime(m.groom_time/1000,'%Y-%m-%d')&lt;= from_unixtime(#{params.endTime}/1000,'%Y-%m-%d')-->
        <!--</if>-->
        GROUP BY shopId
    </select>

    <!--=====================================报表===============================================-->
    <!--查询门店毕业生数-->
    <select id="getClassPassCountByList" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
        pse.shop_id shopId,
        count(*) classPassCount
        from pro_shop_elite pse,pro_employee_shop pes
        WHERE pse.dr = 'N' AND pes.dr='N'
        AND pse.shop_id = pes.shop_id
        <if test="isLobby != null">
            AND pse.is_lobby = #{isLobby,jdbcType=CHAR}
        </if>
        <if test="isManager != null">
            AND pse.is_manager = #{isManager,jdbcType=CHAR}
        </if>
        <if test="list != null and list.size()>0">
            AND pse.id in
            <foreach collection="list" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        GROUP BY shopId

    </select>
    <select id="getElitesByCodeList" resultMap="BaseResultMap" parameterType="java.util.List">
        SELECT
          *
        from pro_shop_elite
        WHERE dr = 'N'
        <if test="list != null and list.size()>0">
            AND  employee_code in
            <foreach collection="list" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>


    </select>

    <select id="queryReportFormListPage" parameterType="com.hht.interceptor.Page" resultType="java.util.Map">
        SELECT
        ps.shop_name shopName,
        ps.id shopId,
        ps.employee_name employeeName,
        ps.position_name positionName,
        pe.employee_code employeeCode,
        petr.create_time createTime,
        petr.test_result testResult,
        petr.test_report_url testReportUrl,
        pe.elite_pool_time elitePoolTime,
        pe.elite_pool_time resultTime
        FROM
        pro_shop_elite pe
        JOIN pro_elite_test_record petr ON pe.employee_code = petr.employee_code
        JOIN (
        SELECT
        pe.employee_code,
        pe.employee_name,
        pp.position_name,
        ps.shop_name,
        ps.id
        FROM
        pro_employee pe,
        pro_employee_position pep,
        pro_position pp,
        pro_employee_shop pes,
        pro_shop ps
        WHERE
        pe.id = pep.employee_id
        AND pe.id = pes.employee_id
        AND pep.position_id = pp.id
        AND pep.default_position='Y'
        AND pes.shop_id = ps.id
        AND pe.dr = 'N'
        AND pes.DR = 'N'
        AND ps.dr = 'N'
        GROUP BY
        employee_code
        ) ps ON ps.employee_code = pe.employee_code
        WHERE
        pe.elite_status = '200'
        AND pe.dr = 'N'
        AND petr.DR = 'N'
        AND ps.id = #{params.shopId,jdbcType=VARCHAR}
    </select>

</mapper>