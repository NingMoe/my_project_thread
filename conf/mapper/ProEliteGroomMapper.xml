<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.ProEliteGroomMapper">
    <resultMap id="BaseResultMap" type="models.ProEliteGroom">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="CHAR" property="id"/>
        <result column="employee_id" jdbcType="CHAR" property="employeeId"/>
        <result column="employee_code" jdbcType="VARCHAR" property="employeeCode"/>
        <result column="shop_id" jdbcType="CHAR" property="shopId"/>
        <result column="class_type" jdbcType="VARCHAR" property="classType"/>
        <result column="groom_time" jdbcType="BIGINT" property="groomTime"/>
        <result column="creator_id" jdbcType="CHAR" property="creatorId"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="modifier_id" jdbcType="CHAR" property="modifierId"/>
        <result column="modify_time" jdbcType="BIGINT" property="modifyTime"/>
        <result column="ts" jdbcType="BIGINT" property="ts"/>
        <result column="dr" jdbcType="CHAR" property="dr"/>
        <result column="is_room" jdbcType="CHAR" property="isRoom"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="auditor_id" jdbcType="CHAR" property="auditorId"/>
        <result column="auditing_time" jdbcType="BIGINT" property="auditingTime"/>
        <result column="project_name" jdbcType="VARCHAR" property="projectName"/>
        <result column="lobby_certificate_num" jdbcType="VARCHAR" property="lobbyCertificateNum"/>
        <result column="is_conform_job" jdbcType="VARCHAR" property="isConformJob"/>
        <result column="is_satisfy_shop_level" jdbcType="VARCHAR" property="isSatisfyShopLevel"/>
        <result column="reason" jdbcType="VARCHAR" property="reason"/>
        <result column="is_satisfied" jdbcType="VARCHAR" property="isSatisfied"/>
        <result column="lobby_type" jdbcType="VARCHAR" property="lobbyType"/>
        <result column="lobby_remark" jdbcType="VARCHAR" property="lobbyRemark"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, employee_id, employee_code, shop_id, class_type, groom_time, creator_id, create_time,
        modifier_id, modify_time, ts, dr, is_room, remark, status, auditor_id, auditing_time,
        project_name,lobby_certificate_num,is_conform_job,is_satisfy_shop_level,reason,is_satisfied,lobby_type,lobby_remark
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from pro_elite_groom
        where id = #{id,jdbcType=CHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from pro_elite_groom
        where id = #{id,jdbcType=CHAR}
    </delete>
    <insert id="insert" parameterType="models.ProEliteGroom">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into pro_elite_groom (id, employee_id, employee_code,
        shop_id, class_type, groom_time,
        creator_id, create_time, modifier_id,
        modify_time, ts, dr, is_room,
        remark, status, auditor_id,
        auditing_time, project_name,lobby_certificate_num,is_conform_job,is_satisfy_shop_level,reason,
        is_satisfied,lobby_type,lobby_remark
        )
        values (#{id,jdbcType=CHAR}, #{employeeId,jdbcType=CHAR}, #{employeeCode,jdbcType=VARCHAR},
        #{shopId,jdbcType=CHAR}, #{classType,jdbcType=VARCHAR}, #{groomTime,jdbcType=BIGINT},
        #{creatorId,jdbcType=CHAR}, #{createTime,jdbcType=BIGINT}, #{modifierId,jdbcType=CHAR},
        #{modifyTime,jdbcType=BIGINT}, #{ts,jdbcType=BIGINT}, #{dr,jdbcType=CHAR}, #{isRoom,jdbcType=CHAR},
        #{remark,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{auditorId,jdbcType=CHAR},
        #{auditingTime,jdbcType=BIGINT}, #{projectName,jdbcType=VARCHAR},
        #{lobbyCertificateNum,jdbcType=VARCHAR},#{isConformJob,jdbcType=VARCHAR},
        #{isSatisfyShopLevel,jdbcType=VARCHAR},#{reason,jdbcType=VARCHAR},
        #{isSatisfied,jdbcType=VARCHAR},#{lobbyType,jdbcType=VARCHAR},#{lobbyRemark,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="models.ProEliteGroom">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into pro_elite_groom
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="employeeId != null">
                employee_id,
            </if>
            <if test="employeeCode != null">
                employee_code,
            </if>
            <if test="shopId != null">
                shop_id,
            </if>
            <if test="classType != null">
                class_type,
            </if>
            <if test="groomTime != null">
                groom_time,
            </if>
            <if test="creatorId != null">
                creator_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="modifierId != null">
                modifier_id,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
            <if test="ts != null">
                ts,
            </if>
            <if test="dr != null">
                dr,
            </if>
            <if test="isRoom != null">
                is_room,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="auditorId != null">
                auditor_id,
            </if>
            <if test="auditingTime != null">
                auditing_time,
            </if>
            <if test="projectName != null">
                project_name,
            </if>

            <if test="lobbyCertificateNum != null">
                lobby_certificate_num,
            </if>
            <if test="isConformJob != null">
                is_conform_job,
            </if>
            <if test="isSatisfyShopLevel != null">
                is_satisfy_shop_level,
            </if>
            <if test="reason != null">
                reason,
            </if>
            <if test="isSatisfied != null">
                is_satisfied,
            </if>
            <if test="lobbyType != null">
                lobby_type,
            </if>
            <if test="lobbyRemark != null">
                lobby_remark,
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=CHAR},
            </if>
            <if test="employeeId != null">
                #{employeeId,jdbcType=CHAR},
            </if>
            <if test="employeeCode != null">
                #{employeeCode,jdbcType=VARCHAR},
            </if>
            <if test="shopId != null">
                #{shopId,jdbcType=CHAR},
            </if>
            <if test="classType != null">
                #{classType,jdbcType=VARCHAR},
            </if>
            <if test="groomTime != null">
                #{groomTime,jdbcType=VARCHAR},
            </if>
            <if test="creatorId != null">
                #{creatorId,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
            <if test="modifierId != null">
                #{modifierId,jdbcType=CHAR},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=BIGINT},
            </if>
            <if test="ts != null">
                #{ts,jdbcType=BIGINT},
            </if>
            <if test="dr != null">
                #{dr,jdbcType=CHAR},
            </if>
            <if test="isRoom != null">
                #{isRoom,jdbcType=CHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="auditorId != null">
                #{auditorId,jdbcType=CHAR},
            </if>
            <if test="auditingTime != null">
                #{auditingTime,jdbcType=BIGINT},
            </if>
            <if test="projectName != null">
                #{projectName,jdbcType=VARCHAR},
            </if>

            <if test="lobbyCertificateNum != null">
                #{lobbyCertificateNum,jdbcType=VARCHAR},
            </if>
            <if test="isConformJob != null">
                #{isConformJob,jdbcType=VARCHAR},
            </if>
            <if test="isSatisfyShopLevel != null">
                #{isSatisfyShopLevel,jdbcType=VARCHAR},
            </if>
            <if test="reason != null">
                #{reason,jdbcType=VARCHAR},
            </if>
            <if test="isSatisfied != null">
                #{isSatisfied,jdbcType=VARCHAR},
            </if>
            <if test="lobbyType != null">
                #{lobbyType,jdbcType=VARCHAR},
            </if>
            <if test="lobbyRemark != null">
                #{lobbyRemark,jdbcType=VARCHAR},
            </if>

        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="models.ProEliteGroom">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update pro_elite_groom
        <set>
            <if test="employeeId != null">
                employee_id = #{employeeId,jdbcType=CHAR},
            </if>
            <if test="employeeCode != null">
                employee_code = #{employeeCode,jdbcType=VARCHAR},
            </if>
            <if test="shopId != null">
                shop_id = #{shopId,jdbcType=CHAR},
            </if>
            <if test="classType != null">
                class_type = #{classType,jdbcType=VARCHAR},
            </if>
            <if test="groomTime != null">
                groom_time = #{groomTime,jdbcType=BIGINT},
            </if>
            <if test="creatorId != null">
                creator_id = #{creatorId,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=BIGINT},
            </if>
            <if test="modifierId != null">
                modifier_id = #{modifierId,jdbcType=CHAR},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=BIGINT},
            </if>
            <if test="ts != null">
                ts = #{ts,jdbcType=BIGINT},
            </if>
            <if test="dr != null">
                dr = #{dr,jdbcType=CHAR},
            </if>
            <if test="isRoom != null">
                is_room = #{isRoom,jdbcType=CHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="auditorId != null">
                auditor_id = #{auditorId,jdbcType=CHAR},
            </if>
            <if test="auditingTime != null">
                auditing_time = #{auditingTime,jdbcType=BIGINT},
            </if>
            <if test="projectName != null">
                project_name = #{projectName,jdbcType=VARCHAR},
            </if>
            <if test="lobbyCertificateNum != null">
                lobby_certificate_num = #{lobbyCertificateNum,jdbcType=VARCHAR},
            </if>
            <if test="isConformJob != null">
                is_conform_job = #{isConformJob,jdbcType=VARCHAR},
            </if>
            <if test="isSatisfyShopLevel != null">
                is_satisfy_shop_level = #{isSatisfyShopLevel,jdbcType=VARCHAR},
            </if>
            <if test="reason != null">
                #{reason,jdbcType=VARCHAR},
            </if>
            <if test="isSatisfied != null">
                is_satisfied = #{isSatisfied,jdbcType=VARCHAR},
            </if>
            <if test="lobbyType != null">
                lobby_type = #{lobbyType,jdbcType=VARCHAR},
            </if>
            <if test="lobbyRemark != null">
                lobby_remark = #{lobbyRemark,jdbcType=VARCHAR},
            </if>

        </set>
        where id = #{id,jdbcType=CHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="models.ProEliteGroom">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update pro_elite_groom
        set employee_id = #{employeeId,jdbcType=CHAR},
        employee_code = #{employeeCode,jdbcType=VARCHAR},
        shop_id = #{shopId,jdbcType=CHAR},
        class_type = #{classType,jdbcType=VARCHAR},
        groom_time = #{groomTime,jdbcType=BIGINT},
        creator_id = #{creatorId,jdbcType=CHAR},
        create_time = #{createTime,jdbcType=BIGINT},
        modifier_id = #{modifierId,jdbcType=CHAR},
        modify_time = #{modifyTime,jdbcType=BIGINT},
        ts = #{ts,jdbcType=BIGINT},
        dr = #{dr,jdbcType=CHAR},
        is_room = #{isRoom,jdbcType=CHAR},
        remark = #{remark,jdbcType=VARCHAR},
        status = #{status,jdbcType=VARCHAR},
        auditor_id = #{auditorId,jdbcType=CHAR},
        auditing_time = #{auditingTime,jdbcType=BIGINT},
        project_name = #{projectName,jdbcType=VARCHAR},
        lobby_certificate_num = #{lobbyCertificateNum,jdbcType=VARCHAR},
        is_conform_job = #{isConformJob,jdbcType=VARCHAR},
        is_satisfy_shop_level = #{isSatisfyShopLevel,jdbcType=VARCHAR},
        reason = #{reason,jdbcType=VARCHAR},
        is_satisfied = #{isSatisfied,jdbcType=VARCHAR},
        lobby_type = #{lobbyType,jdbcType=VARCHAR},
        lobby_remark = #{lobbyRemark,jdbcType=VARCHAR}
        where id = #{id,jdbcType=CHAR}
    </update>

    <select id="getEliteGroomsByListPage" resultType="java.util.Map" parameterType="com.hht.interceptor.Page">

        SELECT
        m.id, m.groom_time groomTime,m.class_type classType,m.status,m.lobby_type lobbyType,
        m.lobby_remark lobbyRemark,s.shop_name shopName,
        e.id employeeId,e.employee_name employeeName,e.employee_code employeeCode,
        e.mobile_no mobile,e.gender ,e.last_entry_time lastEntryTime,e.birthday,
        e.is_married isMarry,e.culture, e.position_id positionId,m.shop_id shopId
        FROM pro_elite_groom m

        LEFT JOIN pro_shop_elite psh
        ON m.employee_id = psh.employee_id
        LEFT JOIN pro_shop s
        ON m.shop_id =s.id
        LEFT JOIN (select e.employee_code ,e.employee_name,e.id,
        e.mobile_no ,e.gender ,e.last_entry_time ,e.birthday,
        e.is_married ,e.culture,p.position_id from pro_employee e,

        pro_employee_position p
        WHERE e.id = p.employee_id AND p.default_position='Y' AND e.dr='N') e
        ON e.id=m.employee_id
        where
        m.dr = 'N' AND s.dr ='N' AND psh.dr='N'

        <if test="params.shopName!= null">
            AND s.shop_name LIKE #{params.shopName}

        </if>
        <if test="params.employeeName != null">
            AND e.employee_name LIKE #{params.employeeName}

        </if>

        <if test="params.lobbyType != null">
            AND m.lobby_type = #{params.lobbyType}
        </if>

        <if test="params.employeeId != null">
            AND p.position_id = #{params.employeeId}

        </if>

        <!--<if test="params.stTime != null">-->
            <!--AND e.last_entry_time &gt;= #{params.stTime}-->
        <!--</if>-->
        <!--<if test="params.endTime != null">-->
            <!--AND e.last_entry_time &lt;= #{params.endTime}-->
        <!--</if>-->

        <if test="params.list != null and params.list.size >0 ">
            AND e.employee_code IN
            <foreach collection="params.list" index="index" open="(" close=")"
                     separator=",">
                #{params.list[${index}]}
            </foreach>
        </if>
        <if test="params.classType != null">
            AND m.class_type = #{params.classType}
        </if>
        <if test="params.status != null">
            AND m.status = #{params.status}
        </if>

        <!--<if test="params.groomTime != null">-->
            <!--AND from_unixtime(m.groom_time/1000) LIKE #{params.groomTime}-->
        <!--</if>-->
        <!---->
        <if test="params.stTime != null and params.stTime !=''">
            AND from_unixtime(m.groom_time/1000,'%Y-%m-%d')&gt;=from_unixtime(#{params.stTime}/1000,'%Y-%m-%d')
        </if>


        <if test="params.endTime != null and params.endTime !=''">
            AND from_unixtime(m.groom_time/1000,'%Y-%m-%d')&lt;=from_unixtime(#{params.endTime}/1000,'%Y-%m-%d')
        </if>
        ORDER BY m.groom_time DESC

    </select>

    <select id="getGroomEmployeesByListPage" resultType="java.util.Map" parameterType="com.hht.interceptor.Page">

        SELECT
        m.id, m.groom_time groomTime,m.class_type classType,m.status,e.id employeeId,
        m.lobby_type lobbyType,m.lobby_remark lobbyRemark,
        s.shop_name shopName,e.employee_name employeeName,e.employee_code employeeCode,
        e.mobile_no mobile,e.gender ,e.last_entry_time lastEntryTime,e.birthday,
        e.is_married isMarry,e.culture, e.position_id positionId,m.shop_id shopId
        FROM pro_elite_groom m

        LEFT JOIN pro_shop_elite psh
        ON m.employee_id = psh.employee_id
        LEFT JOIN pro_shop s
        ON m.shop_id =s.id
        LEFT JOIN (select e.employee_code ,e.employee_name,e.id,
        e.mobile_no ,e.gender ,e.last_entry_time ,e.birthday,
        e.is_married ,e.culture,p.position_id from pro_employee e,

        pro_employee_position p
        WHERE e.id = p.employee_id AND e.dr='N' AND  p.default_position='Y') e
        ON e.id=m.employee_id
        WHERE
        m.dr = 'N' AND s.dr ='N' AND psh.dr='N'AND m.status != '300'
        <if test="params.shopName!= null">
            AND s.shop_name LIKE #{params.shopName}

        </if>
        <if test="params.employeeName != null">
            AND e.employee_name LIKE #{params.employeeName}
        </if>

        <if test="params.employeeId != null">
            AND p.position_id = #{params.employeeId}
        </if>


        <if test="params.lobbyType != null">
            AND m.lobby_type = #{params.lobbyType}
        </if>
        <!--<if test="params.stTime != null">-->
            <!--AND e.last_entry_time &gt;= #{params.stTime}-->
        <!--</if>-->
        <!--<if test="params.endTime != null">-->
            <!--AND e.last_entry_time &lt;= #{params.endTime}-->
        <!--</if>-->

        <if test="params.list != null and params.list.size()>'0'">
            AND e.employee_code IN
            <foreach collection="params.list" index="index" open="(" close=")"
                     separator=",">
                #{params.list[${index}]}
            </foreach>
        </if>

        <if test="params.classType != null">
            AND m.class_type = #{params.classType}
        </if>

        <!---->
        <!--<if test="params.groomTime != null">-->
            <!--AND from_unixtime(m.groom_time/1000,'%Y-%m-%d') LIKE #{params.groomTime}-->
        <!--</if>-->

        <if test="params.stTime != null and params.stTime !=''">
            AND from_unixtime(m.groom_time/1000,'%Y-%m-%d')&gt;= from_unixtime(#{params.stTime}/1000,'%Y-%m-%d')

        </if>
        <if test="params.endTime != null and params.endTime !=''">
            AND from_unixtime(m.groom_time/1000,'%Y-%m-%d')&lt;= from_unixtime(#{params.endTime}/1000,'%Y-%m-%d')
        </if>


        ORDER BY m.groom_time DESC

    </select>


    <update id="updateEliteClassGroomByEmployeeId" parameterType="models.ProEliteGroom">
        update pro_elite_groom set dr = "Y"

        where  employee_id = #{employeeId,jdbcType=CHAR}

    </update>
    <select id="getShopSelfGroomToLobby" resultType="java.util.Map" parameterType="java.util.Map">

        SELECT
        m.id, m.groom_time groomTime,m.employee_id employeeId, m.lobby_type lobbyType,m.lobby_remark lobbyRemark,
        e.employee_name employeeName,e.employee_code employeeCode,e.gender ,p.position_id  positionId
        FROM pro_elite_groom m

        LEFT JOIN pro_employee e
        ON m.employee_id = e.id
        LEFT JOIN pro_employee_position p
        ON m.employee_id = p.employee_id

        WHERE  m.dr = 'N' AND e.dr = 'N' AND p.dr = 'N'  AND m.class_type = '100'
        AND m.shop_id = #{shopId,jdbcType=CHAR}
        GROUP BY employeeCode
        ORDER BY m.groom_time DESC


    </select>

    <select id="getShopSelfGroomToLaksaClass" resultType="java.util.Map" parameterType="java.util.Map">

    SELECT
    m.id, m.groom_time groomTime,m.employee_id employeeId,m.lobby_type lobbyType,m.lobby_remark lobbyRemark,
    e.employee_name employeeName,e.employee_code employeeCode,e.gender ,p.position_id  positionId
    FROM pro_elite_groom m

    LEFT JOIN pro_employee e
    ON m.employee_id = e.id
    LEFT JOIN pro_employee_position p
    ON m.employee_id = p.employee_id
    WHERE m.dr = 'N' AND e.dr = 'N' AND p.dr = 'N' AND m.status = '200' AND  m.class_type = '200'
    AND m.shop_id = #{shopId,jdbcType=CHAR}
    GROUP BY employeeCode
    ORDER BY m.groom_time DESC
    </select>

    <update id="updateEliteClassGroomByEmployeeCode" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update pro_elite_groom
            <set>
                <if test="item.employeeId != null">
                    employee_id = #{item.employeeId,jdbcType=CHAR},
                </if>
                <if test="item.employeeCode != null">
                    employee_code = #{item.employeeCode,jdbcType=VARCHAR},
                </if>
                <if test="item.shopId != null">
                    shop_id = #{item.shopId,jdbcType=CHAR},
                </if>
                <if test="item.classType != null">
                    class_type = #{item.classType,jdbcType=VARCHAR},
                </if>
                <if test="item.groomTime != null">
                    groom_time = #{item.groomTime,jdbcType=BIGINT},
                </if>
                <if test="item.creatorId != null">
                    creator_id = #{item.creatorId,jdbcType=CHAR},
                </if>
                <if test="item.createTime != null">
                    create_time = #{item.createTime,jdbcType=BIGINT},
                </if>
                <if test="item.modifierId != null">
                    modifier_id = #{item.modifierId,jdbcType=CHAR},
                </if>
                <if test="item.modifyTime != null">
                    modify_time = #{item.modifyTime,jdbcType=BIGINT},
                </if>
                <if test="item.ts != null">
                    ts = #{item.ts,jdbcType=BIGINT},
                </if>
                <if test="item.dr != null">
                    dr = #{item.dr,jdbcType=CHAR},
                </if>
                <if test="item.isRoom != null">
                    is_room = #{item.isRoom,jdbcType=CHAR},
                </if>
                <if test="item.remark != null">
                    remark = #{item.remark,jdbcType=VARCHAR},
                </if>
                <if test="item.status != null">
                    status = #{item.status,jdbcType=VARCHAR},
                </if>
                <if test="item.auditorId != null">
                    auditor_id = #{item.auditorId,jdbcType=CHAR},
                </if>
                <if test="item.auditingTime != null">
                    auditing_time = #{item.auditingTime,jdbcType=BIGINT},
                </if>
                <if test="item.projectName != null">
                    project_name = #{item.projectName,jdbcType=VARCHAR},
                </if>
                <if test="item.isSatisfied != null">
                    is_satisfied = #{item.isSatisfied,jdbcType=VARCHAR},
                </if>
                <if test="item.lobbyType != null">
                    lobby_type = #{item.lobbyType,jdbcType=VARCHAR},
                </if>
                <if test="item.lobbyRemark != null">
                    lobby_remark = #{item.lobbyRemark,jdbcType=VARCHAR},
                </if>
            </set>
            where employee_code = #{item.employeeCode,jdbcType=VARCHAR}
            and  class_type='100'
        </foreach>

    </update>

    <update id="updateByEmployeeCodeByList" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update pro_elite_groom
            <set>
                <if test="item.employeeId != null">
                    employee_id = #{item.employeeId,jdbcType=CHAR},
                </if>
                <if test="item.employeeCode != null">
                    employee_code = #{item.employeeCode,jdbcType=VARCHAR},
                </if>
                <if test="item.shopId != null">
                    shop_id = #{item.shopId,jdbcType=CHAR},
                </if>
                <if test="item.classType != null">
                    class_type = #{item.classType,jdbcType=VARCHAR},
                </if>
                <if test="item.groomTime != null">
                    groom_time = #{item.groomTime,jdbcType=BIGINT},
                </if>
                <if test="item.creatorId != null">
                    creator_id = #{item.creatorId,jdbcType=CHAR},
                </if>
                <if test="item.createTime != null">
                    create_time = #{item.createTime,jdbcType=BIGINT},
                </if>
                <if test="item.modifierId != null">
                    modifier_id = #{item.modifierId,jdbcType=CHAR},
                </if>
                <if test="item.modifyTime != null">
                    modify_time = #{item.modifyTime,jdbcType=BIGINT},
                </if>
                <if test="item.ts != null">
                    ts = #{item.ts,jdbcType=BIGINT},
                </if>
                <if test="item.dr != null">
                    dr = #{item.dr,jdbcType=CHAR},
                </if>
                <if test="item.isRoom != null">
                    is_room = #{item.isRoom,jdbcType=CHAR},
                </if>
                <if test="item.remark != null">
                    remark = #{item.remark,jdbcType=VARCHAR},
                </if>
                <if test="item.status != null">
                    status = #{item.status,jdbcType=VARCHAR},
                </if>
                <if test="item.auditorId != null">
                    auditor_id = #{item.auditorId,jdbcType=CHAR},
                </if>
                <if test="item.auditingTime != null">
                    auditing_time = #{item.auditingTime,jdbcType=BIGINT},
                </if>
                <if test="item.projectName != null">
                    project_name = #{item.projectName,jdbcType=VARCHAR},
                </if>
                <if test="item.isSatisfied != null">
                    is_satisfied = #{item.isSatisfied,jdbcType=VARCHAR},
                </if>
                <if test="item.lobbyType != null">
                    lobby_type = #{item.lobbyType,jdbcType=VARCHAR},
                </if>
                <if test="item.lobbyRemark != null">
                    lobby_remark = #{item.lobbyRemark,jdbcType=VARCHAR},
                </if>
            </set>
            where employee_code = #{item.employeeCode,jdbcType=VARCHAR}
        </foreach>

    </update>


    <select id="selectToClassCountByEmPloyeeId" resultType="java.lang.Integer" parameterType="models.ProEliteGroom">

        SELECT
           COUNT(*)
        FROM pro_elite_groom m
        WHERE  class_type = #{classType,jdbcType=VARCHAR} AND  employee_id = #{employeeId,jdbcType=CHAR}
    </select>
    <!--查询员工是否已经推荐-->
    <select id="getGroomEmployees" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM pro_elite_groom
        WHERE
        dr ='N'
        AND
        class_type = #{classType,jdbcType=VARCHAR}
        AND
        employee_code = #{employeeCode,jdbcType=CHAR}

    </select>


    <update id="updateGroomEmployeeByCreateTime" parameterType="java.lang.String">
        UPDATE
         (SELECT id  FROM  pro_elite_groom
          WHERE employee_id = #{employeeId,jdbcType=CHAR}
          ORDER BY create_time DESC
          LIMIT 1)pe,
         pro_elite_groom m
         SET m.dr = 'N'
         WHERE m.id = pe.id
    </update>


    <select id="getPropertyInformationListPage" resultType="java.util.Map" parameterType="com.hht.interceptor.Page">
        SELECT
        pe.employee_name  employeeName,
        pe.gender gender,
        pe.culture culture,
        peg.employee_code employeeCode,
        peg.groom_time groomTime,
        peg.lobby_certificate_num lobbyCertificateNum,
        peg.is_conform_job isConformJob,
        peg.is_satisfy_shop_level isSatisfyShopLevel,
        peg.is_room isRoom,
        peg.reason reason,
        peg.remark remark,
        peg.lobby_remark lobbyRemark,
        ps.shop_name shopName

        FROM
        pro_elite_groom peg,
        pro_employee pe,
        pro_shop ps
        WHERE
        pe.dr='N'
        AND peg.employee_id = pe.id
        AND peg.shop_id = ps.id
        AND  peg.class_type='200'
        <if test="params.shopName!= null and params.shopName!='' ">
            AND ps.shop_name LIKE #{params.shopName}
        </if>
        <if test="params.employeeName!= null and params.employeeName!='' ">
            AND pe.employee_name LIKE '%${params.employeeName}%'
        </if>
        <if test="params.employeeCode!= null and params.employeeCode!='' ">
            AND peg.employee_code =#{params.employeeCode}
        </if>
        <if test="params.isRoom!= null and params.isRoom!='' ">
            AND peg.is_room = #{params.isRoom}
        </if>
        <if test="params.gender!= null and params.gender!='' ">
            AND peg.gender = #{params.gender}
        </if>

        <if test="params.stTime != null and params.stTime !=''">
            AND from_unixtime(peg.groom_time/1000,'%Y-%m-%d')&gt;= from_unixtime(#{params.stTime}/1000,'%Y-%m-%d')
        </if>

        <if test="params.endTime != null and params.endTime !=''">
            AND from_unixtime(peg.groom_time/1000,'%Y-%m-%d')&lt;= from_unixtime(#{params.endTime}/1000,'%Y-%m-%d')
        </if>
        GROUP BY peg.employee_code
    </select>
</mapper>