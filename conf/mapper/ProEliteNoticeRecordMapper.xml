<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.ProEliteNoticeRecordMapper">
  <resultMap id="BaseResultMap" type="models.ProEliteNoticeRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="notice_name" jdbcType="VARCHAR" property="noticeName" />
    <result column="notice_text" jdbcType="VARCHAR" property="noticeText" />
    <result column="is_read" jdbcType="CHAR" property="isRead" />
    <result column="employee_code" jdbcType="CHAR" property="employeeCode" />
    <result column="employee_id" jdbcType="CHAR" property="employeeId" />
    <result column="creator_id" jdbcType="CHAR" property="creatorId" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="ts" jdbcType="BIGINT" property="ts" />
    <result column="dr" jdbcType="CHAR" property="dr" />
    <result column="notice_code" jdbcType="VARCHAR" property="noticeCode" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, notice_name, notice_text, is_read, employee_code,employee_id, creator_id, create_time, ts,
    dr,notice_code
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from pro_elite_notice_record
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from pro_elite_notice_record
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="models.ProEliteNoticeRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into pro_elite_notice_record (id, notice_name, notice_text, 
      is_read, employee_code, creator_id, 
      create_time, ts, dr, notice_code)
    values (#{id,jdbcType=CHAR}, #{noticeName,jdbcType=VARCHAR}, #{noticeText,jdbcType=VARCHAR}, 
      #{isRead,jdbcType=CHAR}, #{employeeCode,jdbcType=CHAR}, #{creatorId,jdbcType=CHAR},
      #{createTime,jdbcType=CHAR}, ts= unix_timestamp(current_timestamp(3))*1000, #{dr,jdbcType=CHAR}, #{noticeCode,jdbcType=VARCHAR})
  </insert>

  <insert id="batchInsertNoticeRecord" parameterType="models.ProEliteNoticeRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into pro_elite_notice_record (id, notice_name, notice_text,
    is_read, employee_code, creator_id,
    create_time, ts, dr, notice_code)
    values
      <foreach collection="list" item="entity" index="index" separator=",">
        (#{entity.id,jdbcType=CHAR}, #{entity.noticeName,jdbcType=VARCHAR}, #{entity.noticeText,jdbcType=VARCHAR},
        #{entity.isRead,jdbcType=CHAR}, #{entity.employeeCode,jdbcType=CHAR}, #{entity.creatorId,jdbcType=CHAR},
        #{entity.createTime,jdbcType=CHAR}, ts= unix_timestamp(current_timestamp(3))*1000, #{entity.dr,jdbcType=CHAR}, #{entity.noticeCode,jdbcType=VARCHAR})
      </foreach>
  </insert>

  <insert id="insertSelective" parameterType="models.ProEliteNoticeRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into pro_elite_notice_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="noticeName != null">
        notice_name,
      </if>
      <if test="noticeText != null">
        notice_text,
      </if>
      <if test="isRead != null">
        is_read,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="employeeCode != null">
        employee_code,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="ts != null">
        ts,
      </if>
      <if test="dr != null">
        dr,
      </if>
      <if test="noticeCode != null">
        notice_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="noticeName != null">
        #{noticeName,jdbcType=VARCHAR},
      </if>
      <if test="noticeText != null">
        #{noticeText,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null">
        #{isRead,jdbcType=CHAR},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=CHAR},
      </if>
      <if test="employeeCode != null">
        #{employeeCode,jdbcType=CHAR},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="ts != null">
        #{ts,jdbcType=BIGINT},
      </if>
      <if test="dr != null">
        #{dr,jdbcType=CHAR},
      </if>
      <if test="noticeCode != null">
        #{noticeCode,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="models.ProEliteNoticeRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pro_elite_notice_record
    <set>
      <if test="noticeName != null">
        notice_name = #{noticeName,jdbcType=VARCHAR},
      </if>
      <if test="noticeText != null">
        notice_text = #{noticeText,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null">
        is_read = #{isRead,jdbcType=CHAR},
      </if>
      <if test="employeeId != null">
        employee_id = #{employeeId,jdbcType=CHAR},
      </if>
      <if test="employeeCode != null">
        employee_code = #{employeeCode,jdbcType=CHAR},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=CHAR},
      </if>
      <if test="ts != null">
        ts = #{ts,jdbcType=BIGINT},
      </if>
      <if test="dr != null">
        dr = #{dr,jdbcType=CHAR},
      </if>
      <if test="noticeCode != null">
        notice_code = #{noticeCode,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="models.ProEliteNoticeRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pro_elite_notice_record
    set notice_name = #{noticeName,jdbcType=VARCHAR},
      notice_text = #{noticeText,jdbcType=VARCHAR},
      is_read = #{isRead,jdbcType=CHAR},
      employee_id = #{employeeId,jdbcType=CHAR},
      employee_code = #{employeeCode,jdbcType=CHAR},
      creator_id = #{creatorId,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=CHAR},
      ts = #{ts,jdbcType=BIGINT},
      dr = #{dr,jdbcType=CHAR},
      notice_code = #{noticeCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>

  <select id="getLaksaSelfNoticeRecords" parameterType="java.util.Map" resultMap="BaseResultMap">

    select
    <include refid="Base_Column_List" />
    from pro_elite_notice_record
    where dr = "N" AND  employee_code = #{employeeCode,jdbcType=CHAR} ORDER BY create_time DESC
  </select>

  <select id="getUnreadNoticeCount" parameterType="java.util.Map" resultType="java.lang.Integer">

    select
      COUNT(*)
     from pro_elite_notice_record
     where dr = "N" AND employee_code = #{employeeCode,jdbcType=CHAR}
  </select>
  <select id="getNoticeByEmployeeCode" parameterType="java.util.Map" resultMap="BaseResultMap">

    select
    <include refid="Base_Column_List" />
    from pro_elite_notice_record
    where dr = "N" AND  employee_code = #{employeeCode,jdbcType=CHAR}
  </select>

  <update id="updateByEmployeeCode" parameterType="java.lang.String">

    update pro_elite_notice_record
    set dr = 'Y'
    where employee_code = #{employeeCode,jdbcType=CHAR}
  </update>
</mapper>